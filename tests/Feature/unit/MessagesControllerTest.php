<?php

namespace Tests\Feature\Unit;

use App\Http\Controllers\MessagesController;
use App\Http\Requests\CreateMessageRequest;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class MessagesControllerTest extends TestCase
{


    // Se ejecuta al principio de cada test
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        // Con el this le damos acceso global al test
        // \Mockery::mock('path clase a emular la instancia o inyeccion')
        $this->cacheMessagesDecorator = \Mockery::mock('App\Decorators\CacheMessagesDecorator');
        $this->controller = new MessagesController($this->cacheMessagesDecorator);

    }

    // Funcion que se ejecuta, al terminar la ejecucion de un test
    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        \Mockery::close();
    }


    public function testIndex()
    {

        // Verificar que se llame al metodo getPaginated
        // Una vez
        $this->cacheMessagesDecorator->shouldReceive('getPaginated')->once();



        $this->controller->index();



    }


}
